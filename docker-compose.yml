version: "3.8" # Use a versão 3.8 para suporte completo a recursos avançados
services:
    postgres:
        image: postgres:16-alpine
        ports:
            - "5422:5432"
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
            POSTGRES_DB: circle_db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        restart: unless-stopped

    redis:
        image: redis:8.2.2-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
        command: redis-server --appendonly yes
        restart: unless-stopped
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 3s
            retries: 5

    api:
        container_name: circle-system
        build:
            context: . # Diretório onde está o Dockerfile
            dockerfile: Dockerfile
            target: build
        ports:
            - "3000:3000"
        environment:
            NODE_ENV: development
            PORT: 3000
            RATE_LIMIT: 1000 #1 segundo
            RATE_LIMIT_TIME_WINDOW: 60000 #1 minuto
            MAX_PARAM_LENGTH: 200
            BODY_LIMIT: 1048576 #1MB
            CONNECTION_TIMEOUT: 30000 #30 segundos
            KEEP_ALIVE_TIMEOUT: 5000 #30 segundos
            CORS_ORIGIN: http://localhost:3000
            ENABLE_LOGGER: true
            LOGGER_NAME: ACA-01
        env_file:
            - path: ./.env
              required: true
        volumes:
            - ./.env:/app/.env # Monta o .env corretamente dentro do container
        command: npm run build
        depends_on:
            - postgres

volumes:
    postgres_data:
    redis_data:
